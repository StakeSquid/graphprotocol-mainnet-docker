version: '3.7'

networks:
  monitor-net:
    driver: bridge

volumes:
    postgres2_data: {}
    subgraph_radio_data: {}


services:

######################################################################################
#####################            CLI CONTAINER                 #######################
######################################################################################

  cli:
    build:
      context: ./cli
    container_name: cli
    restart: unless-stopped
    environment:
      GEO_COORDINATES: ${GEO_COORDINATES:-69.42069 69.42069}
    tty: true
    networks:
      - monitor-net
    volumes:
      - ./cli/scripts:/home/graph/scripts
      - ./cli/history:/history


######################################################################################
#####################          INDEXER SERVICE CONTAINER       #######################
######################################################################################

  indexer-service:
    image: ${INDEXER_SERVICE_VERSION:-ghcr.io/graphprotocol/indexer-service:v0.20.22}
    container_name: indexer-service
    depends_on:
      - postgres2
    environment:
      INDEXER_SERVICE_MNEMONIC: ${OPERATOR_SEED_PHRASE}
      INDEXER_SERVICE_INDEXER_ADDRESS: ${STAKING_WALLET_ADDRESS}
      INDEXER_SERVICE_PORT: 7600
      INDEXER_SERVICE_ETHEREUM_NETWORK: arbitrum
      INDEXER_SERVICE_ETHEREUM: ${TXN_RPC}
      INDEXER_SERVICE_GRAPH_NODE_QUERY_ENDPOINT: http://query-node-0:8000
      INDEXER_SERVICE_GRAPH_NODE_STATUS_ENDPOINT: http://index-node-0:8030/graphql
      INDEXER_SERVICE_NETWORK_SUBGRAPH_ENDPOINT: ${INDEXER_SERVICE_NETWORK_SUBGRAPH_ENDPOINT:-https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-arbitrum}
      INDEXER_SERVICE_NETWORK_SUBGRAPH_DEPLOYMENT: ${NETWORK_SUBGRAPH_DEPLOYMENT}
      INDEXER_SERVICE_POSTGRES_HOST: postgres2
      INDEXER_SERVICE_POSTGRES_USERNAME: ${DB_USER:-graph-node}
      INDEXER_SERVICE_POSTGRES_PASSWORD: ${DB_PASS:-db-password}
      INDEXER_SERVICE_POSTGRES_DATABASE: ${AGENT_DB_NAME:-indexer-agent}
      INDEXER_SERVICE_CLIENT_SIGNER_ADDRESS: "0xc483960d4D58eabc434Dc88a620AdFd883D6Dd4e"
    expose:
      - 7300
      - 7600
    networks:
      - monitor-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.indexer-service-mainnet.loadbalancer.server.port=7600"
      - "traefik.http.routers.indexer-service-mainnet.entrypoints=websecure"
      - "traefik.http.routers.indexer-service-mainnet.tls.certresolver=myresolver"
      - "traefik.http.routers.indexer-service-mainnet.rule=Host(`$INDEX_HOST`)"




######################################################################################
#####################        INDEXER AGENT CONTAINER           #######################
######################################################################################

  indexer-agent:
    image: ${INDEXER_AGENT_VERSION:-ghcr.io/graphprotocol/indexer-agent:v0.20.22}
    container_name: indexer-agent
    depends_on:
      - postgres2
    expose:
      - 7300
      - 8000
      - 8001
      - 8002
    volumes:
      - ./indexer-agent-configs:/root/indexer-agent-configs/
    environment:
      INDEXER_AGENT_MULTINETWORK_MODE: ${INDEXER_AGENT_MULTINETWORK_MODE:-false}
      INDEXER_AGENT_NETWORK_SPECIFICATIONS_DIRECTORY: /root/indexer-agent-configs/
      INDEXER_AGENT_MNEMONIC: ${OPERATOR_SEED_PHRASE}
      INDEXER_AGENT_INDEXER_ADDRESS: ${STAKING_WALLET_ADDRESS}
      INDEXER_AGENT_INDEX_NODE_IDS: "index_node_0"
      INDEXER_AGENT_INJECT_DAI: "true"
      INDEXER_AGENT_REBATE_CLAIM_THRESHOLD: ${REBATE_CLAIM_THRESHOLD:-200}
      INDEXER_AGENT_REBATE_CLAIM_BATCH_THRESHOLD: ${REBATE_CLAIM_BATCH_THRESHOLD:-2000}
      INDEXER_AGENT_REBATE_CLAIM_MAX_BATCH_SIZE: ${REBATE_CLAIM_MAX_BATCH_SIZE:-100}
      INDEXER_AGENT_VOUCHER_REDEMPTION_THRESHOLD: ${VOUCHER_REDEMPTION_THRESHOLD:-200}
      INDEXER_AGENT_VOUCHER_REDEMPTION_BATCH_THRESHOLD: ${VOUCHER_REDEMPTION_BATCH_THRESHOLD:-2000}
      INDEXER_AGENT_VOUCHER_REDEMPTION_MAX_BATCH_SIZE: ${VOUCHER_REDEMPTION_MAX_BATCH_SIZE:-100}
      INDEXER_AGENT_ETHEREUM_NETWORK: arbitrum
      INDEXER_AGENT_ETHEREUM: ${TXN_RPC}
      INDEXER_AGENT_GRAPH_NODE_QUERY_ENDPOINT: http://query-node-0:8000
      INDEXER_AGENT_GRAPH_NODE_STATUS_ENDPOINT: http://index-node-0:8030/graphql
      INDEXER_AGENT_GRAPH_NODE_ADMIN_ENDPOINT: http://index-node-0:8020
      INDEXER_AGENT_PUBLIC_INDEXER_URL: 'https://${INDEX_HOST}/'
      INDEXER_AGENT_INDEXER_GEO_COORDINATES: ${GEO_COORDINATES:-69.420 69.420}
      INDEXER_AGENT_NETWORK_SUBGRAPH_ENDPOINT: ${INDEXER_AGENT_NETWORK_SUBGRAPH_ENDPOINT:-https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-arbitrum}
      INDEXER_AGENT_NETWORK_SUBGRAPH_DEPLOYMENT: ${NETWORK_SUBGRAPH_DEPLOYMENT}
      INDEXER_AGENT_EPOCH_SUBGRAPH_ENDPOINT: ${INDEXER_AGENT_EPOCH_SUBGRAPH_ENDPOINT:-https://api.thegraph.com/subgraphs/name/graphprotocol/arbitrum-epoch-block-oracle}
      INDEXER_AGENT_POSTGRES_HOST: ${AGENT_DB_HOST:-postgres2}
      INDEXER_AGENT_POSTGRES_USERNAME: ${DB_USER:-graph-node}
      INDEXER_AGENT_POSTGRES_PASSWORD: ${DB_PASS:-db-password}
      INDEXER_AGENT_POSTGRES_DATABASE: ${AGENT_DB_NAME:-indexer-agent}
      INDEXER_AGENT_DAI_CONTRACT: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
      INDEXER_AGENT_COLLECT_RECEIPTS_ENDPOINT: https://gateway-arbitrum.network.thegraph.com/collect-receipts
      INDEXER_AGENT_OFFCHAIN_SUBGRAPHS: ${INDEXER_AGENT_OFFCHAIN_SUBGRAPHS}
      INDEXER_AGENT_GAS_PRICE_MAX: ${INDEXER_AGENT_GAS_PRICE_MAX:-50}
      INDEXER_AGENT_ALLOCATION_MANAGEMENT: ${INDEXER_AGENT_ALLOCATION_MANAGEMENT:-auto}
      INDEXER_AGENT_SUBGRAPH_MAX_BLOCK_DISTANCE: 1000
    networks:
      - monitor-net
    restart: unless-stopped



######################################################################################
#####################       POSTGRES AGENT CONTAINER           #######################
######################################################################################

  postgres2:
    image: ${POSTGRES_AGENT_VERSION:-postgres:16.1}
    container_name: postgres2
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-graph-node}
      POSTGRES_PASSWORD: ${DB_PASS:-db-password}
      POSTGRES_DB: ${AGENT_DB_NAME:-indexer-agent}
    volumes:
      - postgres2_data:/var/lib/postgresql/data
    networks:
      - monitor-net
    expose:
      - 5432

  ######################################################################################
  #####################           SUBGRAPH RADIO CONTAINER            ##################
  ######################################################################################

  subgraph-radio:
    image: ghcr.io/graphops/subgraph-radio:1.0
    container_name: subgraph-radio
    expose:
      - 3010
      - 3012
    restart: unless-stopped
    environment:
      GRAPHCAST_NETWORK: ${GRAPHCAST_NETWORK:-mainnet}
      REGISTRY_SUBGRAPH: ${REGISTRY_SUBGRAPH:-https://api.thegraph.com/subgraphs/name/hopeyen/graphcast-registry-mainnet}
      NETWORK_SUBGRAPH: ${NETWORK_SUBGRAPH:-https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-arbitrum}
      MNEMONIC: ${OPERATOR_SEED_PHRASE}
      GRAPH_NODE_STATUS_ENDPOINT: ${GRAPH_NODE_STATUS_ENDPOINT:-http://index-node-0:8030/graphql}
      RUST_LOG: ${RUST_LOG:-warn,hyper=warn,graphcast_sdk=info,subgraph_radio=info}
      INDEXER_ADDRESS: ${STAKING_WALLET_ADDRESS}
      METRICS_HOST: ${METRICS_HOST:-0.0.0.0}
      METRICS_PORT: ${METRICS_PORT:-3010}
      SERVER_PORT: ${SERVER_PORT:-3012}
      ID_VALIDATION: ${ID_VALIDATION:-indexer}
      GOSSIP_TOPIC_COVERAGE: ${COVERAGE:-comprehensive}
      SQLITE_FILE_PATH: ${SQLITE_FILE_PATH:-/data/state.sqlite}
    volumes:
      - subgraph_radio_data:/data
    networks:
      - monitor-net

######################################################################################
#####################         TRAEFIK PROXY CONTAINER          #######################
######################################################################################      

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    expose:
      - "8082"
    ports:
      - "443:443"
      - "80:80"
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/dynamic_config.yml"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # TESTING
      - "--certificatesresolvers.myresolver.acme.email=$EMAIL"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./traefik/letsencrypt:/letsencrypt"
      - "./traefik/config/dynamic_config.yml:/dynamic_config.yml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - monitor-net
    labels:
      - "traefik.enable=true"
