networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}
    loki_data: {}

services:


######################################################################################
#####################             LOKI CONTAINER               #######################
######################################################################################

  init-loki:
    image: busybox:latest
    command: sh -c "chown -R 10001:10001 /data"
    volumes:
      - loki_data:/data
    entrypoint: ""
    deploy:
      restart_policy:
        condition: none

  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - loki_data:/data
      - ./loki/loki.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml --print-config-stderr
    expose:
      - 3100
    restart: unless-stopped
    depends_on:
      - init-loki
    networks:
      - monitor-net

######################################################################################
#####################          PROMTAIL CONTAINER              #######################
######################################################################################


  promtail:
    image:  grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/docker-config.yaml
    restart: unless-stopped
    networks:
      - monitor-net


######################################################################################
#####################          PROMETHEUS CONTAINER            #######################
######################################################################################



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net



######################################################################################
#####################          ALERT MANAGER CONTAINER         #######################
######################################################################################



  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net



######################################################################################
#####################         NODE EXPORTER CONTAINER          #######################
######################################################################################



  nodeexporter:
    image: prom/node-exporter
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net



######################################################################################
#####################             CADVISOR CONTAINER           #######################
######################################################################################



  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    command: --enable_metrics=cpu,memory,network --store_container_labels=false --docker_only=true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"



######################################################################################
#####################           GRAFANA CONTAINER              #######################
######################################################################################



  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_BRUTE_FORCE_LOGIN_PROTECTION=true
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
      - postgres_host=${GRAPH_NODE_DB_HOST:-postgres}
      - postgres_user=${GRAPH_NODE_DB_USER:-your_db_user}
      - postgres_pass=${GRAPH_NODE_DB_PASS:-your_db_password}
      - postgres_db=${GRAPH_NODE_DB_NAME:-your_graphnode_db_name}
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      - "org.label-schema.group=monitoring"
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.rule=Host(`$GRAFANA_HOST`)"



######################################################################################
#####################          PUSHGATEWAY CONTAINER           #######################
######################################################################################



  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net